# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  deploy-service-1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2) JDK 11 버전 설치, 다른 JDK 버전을 사용한다면 수정 필요
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      
      - name: Build with Gradle
        run: ./hello-spring/gradlew clean build
        
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy

      - name: Make zip file
        run: zip -r ./hello-spring.zip ./deploy

      - name: Awsaccess
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Upload to S3
        run: aws s3 cp --region ${{ secrets.AWS_REGION }} ./hello-spring.zip s3://${{ secrets.S3_BUCKET_NAME }}/hello-spring.zip

      - name: Code Deploy
        run: aws deploy create-deployment \
            --application-name ${{ secrets.CODEDEPLOY_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ secrets.CODEDEPLOY_GROUP }} \
            --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},bundleType=zip,key=hello-spring.zip
